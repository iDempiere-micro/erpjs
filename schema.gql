# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountingScheme {
  currency: Currency!
  displayName: String!
  id: Int!
  updtOp: User!
}

input AccountingSchemeSaveArgs {
  currencyIsoCode: String!
  displayName: String!
  id: Int
}

type Address {
  city: String!
  country: Country!
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  line1: String!
  updtOp: User!
  updtTs: UniversalDateTime!
  zipCode: String!
}

input AddressSaveArgs {
  city: String!
  countryIsoCode: String!
  line1: String!
  zipCode: String!
}

type Bank {
  bankIdentifierCode: String!
  displayName: String!
  id: Float!
  updtOp: User!
}

type BankAccount {
  bank: Bank!
  bankAccountCustomerPrintableNumber: String!
  displayName: String!
  iban: String!
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  swift: String!
  updtOp: User!
  updtTs: UniversalDateTime!
}

input BankAccountSaveArgs {
  bankAccountCustomerPrintableNumber: String!
  bankId: Float!
  displayName: String!
  iban: String!
  id: Int
  swift: String!
}

input BankSaveArgs {
  bankIdentifierCode: String!
  displayName: String!
  id: Int
}

input BaseSaveArgs {
  id: Int
}

type ContactPerson {
  contactPersonCompanyRelations: [ContactPersonCompanyRelation!]
  firstName: String!
  id: Int!
  lastName: String!
  updtOp: User!
  updtTs: UniversalDateTime!
}

type ContactPersonCompanyRelation {
  contactPerson: ContactPerson!
  customer: Customer!
  id: Int!
  isActive: Boolean!
  role: String!
  updtOp: User!
  updtTs: UniversalDateTime!
}

input ContactPersonCompanyRelationSaveArgs {
  contactPersonId: Float!
  customerId: Float!
  id: Int
  isActive: Boolean!
  role: String!
}

input ContactPersonSaveArgs {
  firstName: String!
  id: Int
  lastName: String!
}

type Country {
  displayName: String!
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  isoCode: String!
  updtOp: User!
  updtTs: UniversalDateTime!
}

input CountrySaveArgs {
  displayName: String!
  id: Int
  isoCode: String!
}

type Currency {
  displayName: String!
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  isoCode: String!
  updtOp: User!
  updtTs: UniversalDateTime!
}

input CurrencySaveArgs {
  displayName: String!
  id: Int
  isoCode: String!
}

type Customer {
  address: Address
  contactPersonCompanyRelations: [ContactPersonCompanyRelation!]
  customerGroup: CustomerGroup
  displayName: String!
  id: Int!
  idNumber: String!
  invoicingEmail: String!
  isActive: Boolean!
  isCurrent: Boolean!
  legalAddress: Address!
  legalName: String!
  note: String
  publicNote: String
  salesInvoices: [SalesInvoice!]!
  updtOp: User!
  updtTs: UniversalDateTime!
  vatNumber: String
  www: String
}

type CustomerGroup {
  customerPriceLists: [CustomerPriceList!]
  customers: [Customer!]
  displayName: String!
  id: Int!
  isActive: Boolean!
  isCurrent: Boolean!
  updtOp: User!
  updtTs: UniversalDateTime!
}

input CustomerGroupSaveArgs {
  displayName: String!
  id: Int
}

type CustomerPriceList {
  customerGroup: CustomerGroup!
  displayName: String!
  id: Int!
  productPrices: [CustomerProductPrice!]
  validFrom: Date
  validTo: Date
}

input CustomerPriceListSaveArgs {
  customerGroupDisplayName: String!
  displayName: String!
  id: Int
  productPrices: [ProductPriceSaveArgs!]!
  validFrom: Date!
  validTo: Date!
}

type CustomerProductPrice {
  currency: Currency!
  id: Int!
  product: Product!
  sellingPrice: Float!
}

input CustomerProductPriceSaveArgs {
  currencyId: Float!
  customerPriceListId: Float!
  id: Int
  productId: Float!
  sellingPrice: Float!
}

input CustomerSaveArgs {
  address: AddressSaveArgs
  customerGroupId: Int
  displayName: String!
  id: Int
  idNumber: String!
  invoicingEmail: String!
  legalAddress: AddressSaveArgs!
  legalName: String!
  note: String
  vatNumber: String
}

"""Date custom scalar type"""
scalar Date

type DocumentNumberSequence {
  current: Float!
  forType: String!
  id: Int!
  updtOp: User!
}

input IdAndNumber {
  id: Float!
  value: Float!
}

type Menu {
  displayName: String!
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  items: [MenuItem!]!
  updtOp: User!
  updtTs: UniversalDateTime!
}

type MenuItem {
  displayName: String!
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  menu: Menu!
  to: String!
  updtOp: User!
  updtTs: UniversalDateTime!
}

type Mutation {
  confirmSalesInvoice(args: BaseSaveArgs!): SalesInvoice!
  createCustomer(args: CustomerSaveArgs!): Customer!
  createMonthlyInvoice(args: SalesInvoiceMonthlySaveArgs!): [SalesInvoice!]!
  createSalesInvoice(args: SalesInvoiceSaveArgs!): SalesInvoice!
  keepAlive: UniversalDateTime!
  saveAccountingScheme(args: AccountingSchemeSaveArgs!): AccountingScheme!
  saveBank(args: BankSaveArgs!): Bank!
  saveContactPerson(args: ContactPersonSaveArgs!): ContactPerson!
  saveContactPersonCompanyRelation(args: ContactPersonCompanyRelationSaveArgs!): ContactPersonCompanyRelation!
  saveCountry(args: CountrySaveArgs!): Country!
  saveCurrency(args: CurrencySaveArgs!): Currency!
  saveCustomerGroup(args: CustomerGroupSaveArgs!): CustomerGroup!
  saveCustomerPriceList(args: CustomerPriceListSaveArgs!): CustomerPriceList!
  saveCustomerProductPrice(args: CustomerProductPriceSaveArgs!): CustomerProductPrice!
  saveOrganization(args: OrganizationSaveArgs!): Organization!
  saveProduct(args: ProductSaveArgs!): Product!
}

type Organization {
  accountingScheme: AccountingScheme!
  bankAccount: BankAccount!
  contact: String!
  displayName: String!
  documentNumberSequences: DocumentNumberSequence!
  id: Float!
  idNumber: String!
  isActive: Boolean!
  isCurrent: Boolean!
  legalAddress: Address!
  legalName: String!
  registration: String!
  updtOp: User!
  updtTs: UniversalDateTime!
  vatNumber: String!
}

input OrganizationSaveArgs {
  accountingSchemeId: Int!
  contact: String!
  currentInvoiceDocumentNumber: Float!
  displayName: String!
  id: Int
  idNumber: String!
  legalAddress: AddressSaveArgs!
  legalName: String!
  newBankAccount: BankAccountSaveArgs!
  registration: String!
  vatNumber: String
}

type Product {
  customerProductPrices: [CustomerProductPrice!]
  defaultUoM: UnitOfMeasurement
  displayName: String!
  id: Float!
  sku: String!
  updtOp: User!
}

input ProductPriceSaveArgs {
  currencyId: Float!
  productId: Float!
  sellingPrice: Float!
}

input ProductSaveArgs {
  displayName: String!
  id: Int
  sku: String!
}

type Query {
  accountingScheme(id: Int!): AccountingScheme!
  accountingSchemes: [AccountingScheme!]!
  bank(id: Int!): Bank!
  banks: [Bank!]!
  contactPerson(id: Int!): ContactPerson!
  contactPersonCompanyRelation(id: Int!): ContactPersonCompanyRelation!
  contactPersonCompanyRelations: [ContactPersonCompanyRelation!]!
  contactPersons: [ContactPerson!]!
  countries: [Country!]!
  country(id: Int!): Country!
  currencies: [Currency!]!
  currency(id: Int!): Currency!
  customer(id: Int!): Customer!
  customerGroup(id: Int!): CustomerGroup!
  customerGroups: [CustomerGroup!]!
  customerPriceList(id: Int!): CustomerPriceList!
  customerPriceLists: [CustomerPriceList!]!
  customerProductPrice(id: Int!): CustomerProductPrice!
  customerProductPrices: [CustomerProductPrice!]!
  customers: [Customer!]!
  customersByArgs(displayName: String, legalName: String): [Customer!]!
  menu: [Menu!]!
  now: UniversalDateTime!
  organization(id: Int!): Organization!
  organizations: [Organization!]!
  product(id: Int!): Product!
  products: [Product!]!
  salesInvoice(id: Int!): SalesInvoice!
  salesInvoices: [SalesInvoice!]!
  salesInvoicesReport: [SalesInvoicesInTime!]!
}

type SalesInvoice {
  bankAccount: BankAccount!
  currency: Currency!
  currencyMultiplyingRateToAccountingSchemeCurrency: Float!
  customer: Customer!
  documentNo: String
  dueDate: Date!
  grandTotal: Float!
  grandTotalAccountingSchemeCurrency: Float!
  id: Float!
  isActive: Boolean!
  isCalculated: Boolean!
  isCurrent: Boolean!
  isDraft: Boolean!
  issuedOn: Date!
  lines: [SalesInvoiceLine!]!
  organization: Organization!
  paymentTermInDays: Float!
  printDate: Date
  printError: String
  printLanguageIsoCode: String!
  printed: Boolean!
  reverseCharge: Boolean!
  totalLines: Float!
  totalLinesAccountingSchemeCurrency: Float!
  transactionDate: Date!
  updtOp: User!
  updtTs: UniversalDateTime!
  vatReport: [SalesInvoiceVat!]!
}

type SalesInvoiceLine {
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  lineOrder: Float!
  linePrice: Float!
  narration: String!
  product: Product!
  quantity: Float!
  updtOp: User!
  updtTs: UniversalDateTime!
}

input SalesInvoiceLineSaveArgs {
  id: Int
  lineOrder: Float!
  linePrice: Float!
  lineTaxId: Float
  lineTaxIsStandard: Boolean!
  narration: String!
  productId: Float!
  quantity: Float!
}

input SalesInvoiceMonthlySaveArgs {
  dailyRate: Float!
  day: Int!
  eurToCzkRate: Float!
  month: Int!
  narration: String!
  organizationDivider: [IdAndNumber!]!
  totalHours: Float!
  year: Int!
}

input SalesInvoiceSaveArgs {
  currencyIsoCode: String!
  customerDisplayName: String!
  id: Int
  issuedOn: Date!
  lines: [SalesInvoiceLineSaveArgs!]!
  organizationDisplayName: String!
  paymentTermInDays: Int!
  transactionDate: Date!
}

type SalesInvoiceVat {
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  updtOp: User!
  updtTs: UniversalDateTime!
  vatRatePercent: Float!
  vatTotal: Float!
  vatTotalAccountingSchemeCurrency: Float!
  vatTotalAccountingSchemeCurrencyRaw: Float!
  vatTotalRaw: Float!
}

type SalesInvoicesInTime {
  date: String!
  group: String!
  value: Float!
}

type UnitOfMeasurement {
  conversionRates: [UnitOfMeasurementConversion!]!
  conversionRates2: [UnitOfMeasurementConversion!]!
  displayName: String!
  id: Float!
  updtOp: User!
}

type UnitOfMeasurementConversion {
  from: UnitOfMeasurement!
  id: Float!
  to: UnitOfMeasurement!
  unitMultiplyingRate: Float!
  updtOp: User!
}

scalar UniversalDateTime

type User {
  email: String
  id: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  name: String
  updtOpId: Float!
  updtTs: UniversalDateTime!
  username: String
}
